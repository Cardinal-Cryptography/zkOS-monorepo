---
name: "Manual browser extension deployment"
on:
  workflow_dispatch:
    inputs:
      deployment_type:
        description: "Deployment type"
        required: true
        default: "preview"
        type: choice
        options:
          - "preview"
          - "prod"
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  PROD_OR_PREVIEW: ${{ inputs.deployment_type == 'prod' && '--prod' || '' }}
  NODE_VERSION: 18
  PLASMO_PUBLIC_SHIELDER_CONTRACT_ADDRESS: ${{ vars.SHIELDER_CONTRACT_ADDRESS }}
jobs:
  build-contracts:
    name: Build contracts
    uses: ./.github/workflows/_build-contracts.yml
    secrets: inherit
  build-wasm-packages:
    name: Build wasm packages
    uses: ./.github/workflows/_build-wasm-packages.yml
    secrets: inherit
  build-deploy-browser-extension:
    name: Build and deploy browser extension
    needs: [build-contracts, build-wasm-packages]
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - name: Display variables
        run: |
          echo "PROD_OR_PREVIEW: ${{ env.PROD_OR_PREVIEW }}"
          echo "SHIELDER_CONTRACT_ADDRESS: ${{ env.PLASMO_PUBLIC_SHIELDER_CONTRACT_ADDRESS }}"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Download compiled contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts
      - name: Download generated wasm from artifacts
        uses: actions/download-artifact@v4
        with:
          name: crates-shielder-wasm-pkg
          path: crates/shielder-wasm/pkg
      - name: Download generated build cache
        uses: actions/download-artifact@v4
        with:
          name: generated-build-cache
          path: cache
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: latest
      - name: Install dependencies (shielder-sdk)
        run: pnpm install --frozen-lockfile
        working-directory: ts/shielder-sdk
      - name: Build shielder-sdk
        run: pnpm build
        working-directory: ts/shielder-sdk
      - name: Install dependencies (browser-extension)
        run: pnpm install --frozen-lockfile
        working-directory: ts/browser-extension
      - name: Build extension (webapp)
        run: pnpm build
        working-directory: ts/browser-extension
      - name: Pull vercel data
        run: vercel pull --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ts/browser-extension
      - name: Build for vercel
        run: vercel build ${{ env.PROD_OR_PREVIEW }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ts/browser-extension
      - name: Deploy to vercel
        run: |
          vercel deploy \
            --prebuilt ${{ env.PROD_OR_PREVIEW }} \
            --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "frontend preview deployment: <br />$(cat deployment-url.txt)" > deployment-url.txt
        working-directory: ts/browser-extension
  clean-wasm-artifact:
    name: Clean wasm artifact
    if: ${{ always() }}
    needs: [build-wasm-packages, build-deploy-browser-extension]
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            crates-shielder-wasm-pkg
