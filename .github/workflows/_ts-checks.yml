---
name: Run linter and tests for all Typescript modules

on:
  workflow_call:
  workflow_dispatch:

jobs:
  main:
    name: Run lints and tests
    runs-on: [self-hosted, Linux, X64, small]
    timeout-minutes: 10

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Download compiled contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts

      - name: Download generated wasm from artifacts
        uses: actions/download-artifact@v4
        with:
          name: wasm-pkg
          path: crates/shielder_bindings/pkg

      - name: Download generated proving keys from artifacts
        uses: actions/download-artifact@v4
        with:
          name: proving-keys-pkg
          path: crates/shielder_bindings/artifacts

      - name: Download generated build cache
        uses: actions/download-artifact@v4
        with:
          name: generated-build-cache
          path: cache

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - uses: pnpm/action-setup@v4
        with:
          version: 10.2.0

      - name: Install dependencies (workspace)
        run: pnpm install-deps
        working-directory: ts

      - name: Build all (workspace)
        run: pnpm build
        working-directory: ts

      - name: Run lint checks (workspace)
        run: pnpm lint
        working-directory: ts

      - name: Run ts tests (workspace)
        run: pnpm test
        working-directory: ts

      - name: Generate coverage data
        run: pnpm coverage-report
        working-directory: ts/shielder-sdk

      - name: Generate coverage markdown report
        run: node __tests/generate-coverage-report.js
        working-directory: ts/shielder-sdk

      - name: Post coverage report as PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ts/shielder-sdk/coverage/coverage-report.md

  e2e-tests:
    name: Run E2E tests on local anvil node
    runs-on: [self-hosted, Linux, X64, large]
    timeout-minutes: 15
    env:
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Download generated contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: generated-contracts
          path: contracts

      - name: Download compiled contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts

      - name: Download generated wasm from artifacts
        uses: actions/download-artifact@v4
        with:
          name: wasm-pkg
          path: crates/shielder_bindings/pkg

      - name: Download generated proving keys from artifacts
        uses: actions/download-artifact@v4
        with:
          name: proving-keys-pkg
          path: crates/shielder_bindings/artifacts

      - name: Download generated build cache
        uses: actions/download-artifact@v4
        with:
          name: generated-build-cache
          path: cache

      - name: Prepare Rust env
        uses: ./.github/actions/prepare-rust-env

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - uses: pnpm/action-setup@v4
        with:
          version: 10.2.0

      - name: Prepare Solidity environment
        uses: ./.github/actions/prepare-sol-env

      - name: Install dependencies (workspace)
        run: pnpm install-deps
        working-directory: ts

      - name: Build all (workspace)
        run: pnpm build
        working-directory: ts

      - name: Run e2e sdk tests
        run: |
          NO_FORMATTING=true ./tooling-e2e-tests/ts_sdk_tests.sh
